// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id Int @default(autoincrement()) @id
  email String @unique
  name String
  password String?
  githubId String? @unique
  avatarUrl String?
  authProvider String @default("email") // "email" or "github"
  createdAt DateTime @default(now())
}

model emailOtp {
  id Int @default(autoincrement()) @id
  email String @unique
  otp String
  expiresAt DateTime
  isVerified Boolean
  createdAt DateTime @default(now())
}

model Agent {
  id         Int      @id @default(autoincrement())
  hostname   String   @unique
  os         String
  arch       String
  totalmem   BigInt
  lastSeen   DateTime
  isOnline   Boolean  @default(true)
  jobs       Job[]
}

model Job {
  id         Int      @id @default(autoincrement())
  agent      Agent?   @relation(fields: [agentId], references: [id])
  title      String
  description String?
  agentId    Int?
  script    String
  env        Json?
  status     String   // pending, running, success, failed
  exitCode   Int?
  createdAt  DateTime @default(now())
  finishedAt DateTime?
  logs       Log[]
}

model Log {
  id        Int      @id @default(autoincrement())
  job       Job      @relation(fields: [jobId], references: [id])
  jobId     Int
  type      String   // stdout, stderr, etc
  message   String
  createdAt DateTime @default(now())
}